{"version":3,"sources":["components/ToDoAdd.js","hooks/useForm.js","components/ToDoListItem.js","components/ToDoList.js","hooks/todoReducer.js","ToDoApp.js","index.js"],"names":["ToDoAdd","handleAddToDo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newToDo","id","Date","getTime","done","type","className","placeholder","autoComplete","onChange","ToDoListItem","props","todo","handleDelete","handleToggle","i","onClick","ToDoList","todos","map","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","ToDoApp","useReducer","dispatch","useEffect","setItem","stringify","console","log","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c947394f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const ToDoAdd = ({ handleAddToDo }  ) => {\r\n\r\n    const [{description}, handleInputChange, reset]= useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(description.trim().length <=1 ){\r\n            return ;\r\n        }\r\n\r\n        const newToDo={\r\n            id: new Date().getTime(),\r\n            description: description,\r\n            done: false\r\n        }\r\n\r\n        handleAddToDo(newToDo); \r\n        reset();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             <h4>Add new to do</h4>\r\n                        <hr/>\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"description\" \r\n                                className=\"form-control\"\r\n                                placeholder=\"Write a new to do here\" \r\n                                autoComplete=\"off\"\r\n                                value= {description}\r\n                                onChange= { handleInputChange }\r\n                            />\r\n\r\n                        <div className = \"d-grid gap-2\">\r\n                            <button \r\n                            type=\"submit\"\r\n                            className=\"btn btn-outline-primary mt-2\"\r\n                            > Add new to do </button>\r\n                        </div>\r\n\r\n\r\n\r\n                    </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\n//It receives an object from a form and changes the state\r\nexport const useForm = (initialState={}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]:target.value\r\n        });\r\n\r\n    } \r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react'\r\n\r\nexport const ToDoListItem = (props) => {\r\n\r\n    const {todo, handleDelete, handleToggle, i} = props; \r\n\r\n    return (\r\n        <div>\r\n            <li \r\n                key={todo.id}\r\n                className=\"list-group-item\"\r\n            > \r\n                <p \r\n                    className={`${todo.done && \"complete\" }`}\r\n                        onClick= { () => handleToggle (todo.id) }\r\n                    > {i+1}. {todo.description}\r\n                </p>\r\n                <button \r\n                    className=\"btn btn-danger\"\r\n                    onClick={ () => handleDelete (todo.id) }\r\n                    >Delete task</button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ToDoListItem } from './ToDoListItem';\r\n\r\nexport const ToDoList = (props) => {\r\n\r\n    const {todos, handleToggle, handleDelete}=props;\r\n\r\n    return (\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n              {\r\n                 todos.map( (todo, i) => (\r\n                    <ToDoListItem\r\n                            key={todo.id}\r\n                            todo= {todo}\r\n                            handleDelete= { handleDelete }\r\n                            handleToggle= { handleToggle }\r\n                            i= {i}\r\n                        />\r\n                    ))\r\n              }\r\n         </ul>\r\n        \r\n    )\r\n}\r\n","\r\n\r\nexport const todoReducer=(state =[], action)=>{\r\n\r\n    switch (action.type) {\r\n        case 'add':\r\n            \r\n          return [...state, action.payload]; \r\n        \r\n        case 'delete':\r\n\r\n          return state.filter( todo => todo.id !== action.payload); \r\n\r\n        case 'toggle':\r\n\r\n          return state.map(todo => \r\n            (todo.id===action.payload) ? {...todo, done: !todo.done} : todo\r\n          )\r\n    \r\n        default:\r\n            return state; \r\n    }\r\n\r\n\r\n\r\n}","import React, { useEffect, useReducer } from \"react\";\r\nimport { ToDoAdd } from \"./components/ToDoAdd\";\r\nimport { ToDoList } from \"./components/ToDoList\";\r\nimport { todoReducer } from \"./hooks/todoReducer\";\r\nimport \"./todoapp.css\"; \r\n\r\n\r\nconst init = () => {\r\n    \r\n    return JSON.parse(localStorage.getItem('todos')) || []; \r\n    \r\n}\r\n\r\nexport const ToDoApp= () =>{\r\n\r\n\r\n    const [ todos, dispatch ] = useReducer (todoReducer, [], init);\r\n\r\n\r\n\r\n    useEffect ( () => {\r\n        localStorage.setItem('todos', JSON.stringify( todos ));\r\n    }, [todos]);\r\n\r\n    console.log (\"Me renderizo\");\r\n\r\n    const handleDelete = (todoId) => {\r\n        const action={\r\n            type: \"delete\",\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch (action);\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    const handleAddToDo = (newToDo) => {\r\n        dispatch({\r\n            type: \"add\",\r\n            payload: newToDo\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>ToDoApp ({todos.length})</h1>\r\n            <hr/>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-7\">\r\n                  \r\n                    <ToDoList\r\n                        todos= {todos}\r\n                        handleDelete= { handleDelete }\r\n                        handleToggle= { handleToggle }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"col-5\">\r\n                       <ToDoAdd\r\n                            handleAddToDo = { handleAddToDo }\r\n                       \r\n                       />\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )        \r\n\r\n\r\n\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ToDoApp } from './ToDoApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ToDoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}